<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Index</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <style>
        body{
            padding-top: 50px;
            padding-bottom: 50px;
        }
        .scroll{
            overflow-x: auto;
        }
        .card-body > div:not(:last-child){
            padding-bottom: 20px;
            border-bottom: 1px solid #ccc;
        }
        .card-body .box:not(:last-child){
            margin-right: 10px;
        }
        .card-body .boxImage{
            border: 1px solid #ccc;
        }
    </style>
</head>
<body>
    <div class="container" id="app">
        <div>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                  <li class="breadcrumb-item"><a href="/">Home</a></li>
                  <li class="breadcrumb-item active" aria-current="page">{{collections.name}} <small>({{collections._id}})</small></li>
                </ol>
            </nav>
        </div>
        <div class="my-2">
            <div class="d-flex">
                <div>
                    <select v-model="type" class="form-control">
                        <option value="loop">Loop</option>
                        <option value="random">Random</option>
                    </select>
                </div>
                <div class="ms-4">
                    <form method="POST" action="/api/asset/generate" class="d-flex">
                        <input type="hidden" :value="collections._id" name="collection">
                        <input type="hidden" :value="type" name="type">
                        <div class="input-group" v-if="type=='loop'">
                            <input type="text" class="form-control" name="start" placeholder="Start">
                            <span class="input-group-text">-</span>
                            <input type="text" class="form-control" name="end" placeholder="End">
                        </div>
                        <div class="input-group" v-if="type=='random'">
                            <span class="input-group-text">Count</span>
                            <input type="text" class="form-control" name="random" placeholder="Random">
                        </div>
                        <input type="submit" value="submit" class="btn btn-success btn-sm ms-4" />
                    </form>
                </div>
            </div>
            
        </div>
        <div>
            <div class="card">
                <div class="card-header">
                   <div class="d-flex justify-content-between align-items-center">
                       <div>Total assets : {{total}}</div>
                       <div>
                           <a :href="`/data/${collections._id}`" class="btn btn-info btn-sm">Data</a>
                        </div>
                   </div>
                </div>
                <div class="card-body">
                    <div v-for="asset in assets" :key="asset._id" class="mb-2">
                        <h5>{{asset.sort}} : {{asset.title}} (<small>{{asset.asset.length}}</small>)</h5>
                        <div class="d-flex scroll">
                            <div v-for="(image,index) in asset.asset" :key="index" class="box">
                                <p class="mb-0 text-center bg-secondary">{{index}}</p>
                                <div class="boxImage bg-secondary bg-opacity-25">
                                    <img src="/image.png" :data-src="`${image.path}`" class="lazy bg-white m-2" width="100" height="100">
                                </div>
                                <p class="mb-0"><small>{{image.name.replace(/[\-_]/g, " ").substring(0, image.name.indexOf("."))}}</small></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

<script>
    

    const vue = new Vue({
        el:"#app",
        data:{
            type:"loop",
            collections:[],
            assets:[],
            total:1,
        },
        mounted() {
            this.collections = <%-JSON.stringify(collection)%> ;
            this.assets = <%-JSON.stringify(asset)%> ;

            this.assets.forEach(element => {
                this.total *= element.asset.length
            });
        },
    })
    
</script>

<script>
    document.addEventListener("DOMContentLoaded", function() {
  var lazyloadImages;    

  if ("IntersectionObserver" in window) {
    lazyloadImages = document.querySelectorAll(".lazy");
    var imageObserver = new IntersectionObserver(function(entries, observer) {
      entries.forEach(function(entry) {
        if (entry.isIntersecting) {
          var image = entry.target;
          image.src = image.dataset.src;
          image.classList.remove("lazy");
          imageObserver.unobserve(image);
        }
      });
    });

    lazyloadImages.forEach(function(image) {
      imageObserver.observe(image);
    });
  } else {  
    var lazyloadThrottleTimeout;
    lazyloadImages = document.querySelectorAll(".lazy");
    
    function lazyload () {
      if(lazyloadThrottleTimeout) {
        clearTimeout(lazyloadThrottleTimeout);
      }    

      lazyloadThrottleTimeout = setTimeout(function() {
        var scrollTop = window.pageYOffset;
        lazyloadImages.forEach(function(img) {
            if(img.offsetTop < (window.innerHeight + scrollTop)) {
              img.src = img.dataset.src;
              img.classList.remove('lazy');
            }
        });
        if(lazyloadImages.length == 0) { 
          document.removeEventListener("scroll", lazyload);
          window.removeEventListener("resize", lazyload);
          window.removeEventListener("orientationChange", lazyload);
        }
      }, 20);
    }

    document.addEventListener("scroll", lazyload);
    window.addEventListener("resize", lazyload);
    window.addEventListener("orientationChange", lazyload);
  }
})

</script>